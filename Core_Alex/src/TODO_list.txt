//todo: wright code
Задача №2+
  Написать многопоточную программу в которой будет создаваться список (LinkedList or ArrayList) и при выполнении
  программы будет падать ошибка ConcurrentModificationException.
A/C:
        1. Потоков должно быть несколько
         2. В main методе должны быть методы работы со списком, а не сама логика (то что мы обсуждали про вынесение в
          отдельные методы логики)
Задача №3
  Написать программу, которая подсчитает все файлы в папке (с учетом файлов во вложенных папках). Подсчитать потраченное
   время на выполнение, распаралелить данную работу и подсчитать потраченное время на выполнение после использования
   многопоточности.
A/C:
1.  Время должно вывестить в формате : Seconds: 100 s, где 100 s -> дельта времени выполнения программы.
2.  Использовать корневой каталог по этой ссылке (https://drive.google.com/open?id=1OnekofOjxUV-JkcCRPZjW1lYT9IZkTXz)
3.  Желательно не использовать Files.walk().
Задача №4
  Разработать 3 класса: Хранилище, Счетчик и Принтер. Хранилище сохраняет значение счетчика.
Счетчик должен создавать новый поток, который начинает счет с 0 (0, 1, 2, 3, 4 ...) и инкрементит каждый раз на 1, и
сохраняет значение в хранилище. Принтер класс должен читать значение с хранилища и выводит их в консоль.
Программа должна выводить число с хранилища сразу после того как счетчик был изменен. Каждое число должно быть
напечатано только один раз.
  A/C:
1.  Использовать методы wait(), notify(), notifyAll().
2.  Хранилище, счетчик и принтер разные классы.

A/C - acceptance criteria. Критерия приема кажддой задачи.

//todo: google
1 + PermGen - Metaspace
2 + динамическое связывание
3 - Object. wait()/notify()/notifyAll()
4 + Thread Join()